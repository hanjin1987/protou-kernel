From f242bddddfc74e75eb79b191e8bc0256032ff654 Mon Sep 17 00:00:00 2001
From: Tirupathi Reddy <tirupath@codeaurora.org>
Date: Thu, 29 Nov 2012 10:06:14 +0530
Subject: [PATCH 61/75] regulator: onsemi: Add support to configure REARM bit

When NCP6335D returns from thermal shutdown (TSD), it can restart in 2
different configurations depending on REARM bit in the LIMCONF register.
If REARM = 0 then NCP6335D does not re-start after TSD. To restart,
an EN pin toggle is required. If REARM = 1, NCP6335D re-starts with
register values set prior to thermal shutdown.

By default, REARM bit is set in LIMCONF register. A rearm_disable
variable is added to driver platform data to configure the bit at
time of initiallization.

Change-Id: I479dc33fac189add7d7e29d7929e445743230d41
Signed-off-by: Tirupathi Reddy <tirupath@codeaurora.org>
(cherry picked from commit db3cbc5a2adc52f9e3b634c6a2824f90c48be7ce)

Signed-off-by: Gopal Goberu <ggober@codeaurora.org>
---
 drivers/regulator/onsemi-ncp6335d.c       |   13 +++++++++++++
 include/linux/regulator/onsemi-ncp6335d.h |    1 +
 2 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/drivers/regulator/onsemi-ncp6335d.c b/drivers/regulator/onsemi-ncp6335d.c
index f5fd460..32fb3fd 100644
--- a/drivers/regulator/onsemi-ncp6335d.c
+++ b/drivers/regulator/onsemi-ncp6335d.c
@@ -26,6 +26,7 @@
 #define REG_NCP6335D_PGOOD		0x12
 #define REG_NCP6335D_TIMING		0x13
 #define REG_NCP6335D_COMMAND		0x14
+#define REG_NCP6335D_LIMCONF		0x16
 
 /* constraints */
 #define NCP6335D_MIN_VOLTAGE_UV		600000
@@ -43,6 +44,8 @@
 #define NCP6335D_VOUT_SEL_MASK		0x7F
 #define NCP6335D_SLEW_MASK		0x18
 #define NCP6335D_SLEW_SHIFT		0x3
+#define NCP6335D_TSD_MASK		0x01
+#define NCP6335D_TSD_VAL		0x00
 
 struct ncp6335d_info {
 	struct regulator_dev *regulator;
@@ -280,6 +283,16 @@ static int __devinit ncp6335d_init(struct ncp6335d_info *dd,
 	if (rc)
 		dev_err(dd->dev, "Unable to set slew rate rc(%d)\n", rc);
 
+	if (pdata->rearm_disable) {
+
+		rc = regmap_update_bits(dd->regmap, REG_NCP6335D_LIMCONF,
+				NCP6335D_TSD_MASK, NCP6335D_TSD_VAL);
+		if (rc)
+			dev_err(dd->dev, "Unable to reset REARM bit rc(%d)\n",
+					rc);
+	}
+
+	dump_registers(dd, REG_NCP6335D_LIMCONF, __func__);
 	dump_registers(dd, REG_NCP6335D_PROGVSEL0, __func__);
 	dump_registers(dd, REG_NCP6335D_TIMING, __func__);
 	dump_registers(dd, REG_NCP6335D_PGOOD, __func__);
diff --git a/include/linux/regulator/onsemi-ncp6335d.h b/include/linux/regulator/onsemi-ncp6335d.h
index a57c3b7..2ec0b39 100644
--- a/include/linux/regulator/onsemi-ncp6335d.h
+++ b/include/linux/regulator/onsemi-ncp6335d.h
@@ -23,6 +23,7 @@ struct ncp6335d_platform_data {
 	int default_vsel;
 	int slew_rate_ns;
 	int discharge_enable;
+	int rearm_disable;
 };
 
 #endif
-- 
1.7.0.4

