From 1cc5830503510b04918e35434d57aec1f2dceee8 Mon Sep 17 00:00:00 2001
From: Trilok Soni <tsoni@codeaurora.org>
Date: Thu, 8 Nov 2012 14:36:51 +0530
Subject: [PATCH 35/75] msm: devices-msm7x27a: Add support for 8625Q acpu driver.

Add the support for selecting the 8625Q acpu driver
required for 8625Q.

Change-Id: Iead21bfa99eb202b03d4d244c04bb6408b3ca67f
Signed-off-by: Trilok Soni <tsoni@codeaurora.org>
Signed-off-by: Utsab Bose <ubose@codeaurora.org>
Acked by: Manish Poddar <mpoddar@codeaurora.org>
---
 arch/arm/mach-msm/devices-msm7x27a.c |   38 +++++++++++++++++++++++++++++++++-
 1 files changed, 37 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-msm/devices-msm7x27a.c b/arch/arm/mach-msm/devices-msm7x27a.c
index 737436f..54e3730 100644
--- a/arch/arm/mach-msm/devices-msm7x27a.c
+++ b/arch/arm/mach-msm/devices-msm7x27a.c
@@ -35,6 +35,7 @@
 #include "devices-msm7x2xa.h"
 #include "footswitch.h"
 #include "acpuclock.h"
+#include "acpuclock-8625q.h"
 #include "spm.h"
 #include "mpm-8625.h"
 #include "irq.h"
@@ -239,6 +240,21 @@ struct platform_device msm7x27aa_device_acpuclk = {
 	.dev.platform_data = &msm7x27aa_acpuclk_pdata,
 };
 
+static struct acpuclk_pdata msm8625q_pdata = {
+	.max_speed_delta_khz = 801600,
+};
+
+static struct acpuclk_pdata_8625q msm8625q_acpuclk_pdata = {
+	.acpu_clk_data = &msm8625q_pdata,
+	.pvs_voltage_uv = 1350000,
+};
+
+struct platform_device msm8625q_device_acpuclk = {
+	.name		= "acpuclock-8625q",
+	.id		= -1,
+	.dev.platform_data = &msm8625q_acpuclk_pdata,
+};
+
 static struct acpuclk_pdata msm8625_acpuclk_pdata = {
 	/* TODO: Need to update speed delta from H/w Team */
 	.max_speed_delta_khz = 604800,
@@ -2008,6 +2024,21 @@ static int __init msm_gpio_config_gps(void)
 	return ret;
 }
 
+static int __init msm_acpuclock_init(void)
+{
+	struct cpr_info_type *acpu_info = NULL;
+	acpu_info = kzalloc(sizeof(struct cpr_info_type), GFP_KERNEL);
+	if (!acpu_info) {
+		pr_err("%s: Out of memory %d\n", __func__, -ENOMEM);
+		return -ENOMEM;
+	}
+	msm_smem_get_cpr_info(acpu_info);
+	msm8625q_acpuclk_pdata.pvs_voltage_uv =
+			msm_c2_pmic_mv[acpu_info->pvs_fuse & 0x1F];
+	kfree(acpu_info);
+	return 0;
+}
+
 int __init msm7x2x_misc_init(void)
 {
 	if (machine_is_msm8625_rumi3()) {
@@ -2016,11 +2047,16 @@ int __init msm7x2x_misc_init(void)
 		return 0;
 	}
 
+
 	msm_clock_init(&msm7x27a_clock_init_data);
 	if (cpu_is_msm7x27aa() || cpu_is_msm7x25ab())
 		platform_device_register(&msm7x27aa_device_acpuclk);
 	else if (cpu_is_msm8625()) {
-		if (msm8625_cpu_id() == MSM8625)
+
+		if (machine_is_qrd_skud_prime()) {
+			msm_acpuclock_init();
+			platform_device_register(&msm8625q_device_acpuclk);
+		} else if (msm8625_cpu_id() == MSM8625)
 			platform_device_register(&msm7x27aa_device_acpuclk);
 		else if (msm8625_cpu_id() == MSM8625A)
 			platform_device_register(&msm8625_device_acpuclk);
-- 
1.7.0.4

